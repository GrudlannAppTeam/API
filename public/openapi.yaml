openapi: 3.0.0
info:
  title: GrudlannApp
  version: '1'
paths:
  /api/users/login:
    post:
      tags:
        - User
      summary: Login
      operationId: 'App\Controller\AbstractBaseController::docLogin'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email:
                  type: string
                  uniqueItems: true
                password:
                  type: string
                  example: Testowe123!
              type: object
  /api/beers:
    get:
      tags:
        - Beer
      summary: 'Get all beers'
    post:
      tags:
        - Beer
      summary: Create
      operationId: 'App\Controller\BeerController::create'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
              type: object
  /api/beers/tasting-rooms:
    post:
      tags:
        - Beer
      summary: 'Add beer to tasting room'
      operationId: 'App\Controller\BeerController::addBeerToTastingRoom'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                beerId:
                  type: integer
                tastingRoomId:
                  type: integer
              type: object
  /api/tasting-rooms:
    get:
      tags:
        - 'Tasting Room'
      summary: 'Get all tastingRooms'
    put:
      tags:
        - 'Tasting Room'
      summary: 'Start tasting room'
      operationId: 'App\Controller\TastingRoomController::start'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                tastingRoomId:
                  type: integer
                status:
                  type: bool
              type: object
    post:
      tags:
        - 'Tasting Room'
      summary: Create
      operationId: 'App\Controller\TastingRoomController::create'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
              type: object
  '/api/tasting-rooms/{tastingRoomId}':
    delete:
      tags:
        - 'Tasting Room'
      summary: Delete
      operationId: 'App\Controller\TastingRoomController::delete'
  /api/tasting-rooms/join:
    post:
      tags:
        - 'Tasting Room'
      summary: Join
      operationId: 'App\Controller\TastingRoomController::join'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                code:
                  type: string
              type: object
  '/api/tasting-rooms/{id}':
    get:
      tags:
        - 'Tasting Room'
      summary: 'Get tasting room by id'
      operationId: 'App\Controller\TastingRoomController::getDetailsById'
  /api/users/register:
    post:
      tags:
        - User
      summary: Registration
      operationId: 'App\Controller\UserController::register'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email:
                  type: string
                  uniqueItems: true
                nick:
                  type: string
                  uniqueItems: true
                password:
                  type: string
                  example: Testowe123!
              type: object
  /api/users:
    get:
      tags:
        - User
      summary: 'Get all users'
      operationId: 'App\Controller\UserController::getUsers'
